AWSTemplateFormatVersion: "2010-09-09"
Description: "Minimal Restate single-node deployment (EC2 + EBS) for testing"

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where to deploy
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet within VPC (same AZ)
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 KeyPair for SSH (optional, leave blank if using SSM only)
    Default: sparachi-keypair-1
  InstanceType:
    Type: String
    Default: c7i.large
    AllowedValues: [c7i.large, t3.medium]
    Description: EC2 instance type for Restate server
  DataVolumeSize:
    Type: Number
    Default: 20
    Description: Size in GiB of EBS data volume
  AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64
    Description: Latest Amazon Linux 2023 x86_64 AMI via SSM
  AllowedIPs:
    Type: CommaDelimitedList
    Description: Comma-separated list of CIDR blocks (e.g. 74.110.139.240/32,203.0.113.15/32)


Resources:

  RestateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Restate ports
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: !Select [0, !Ref AllowedIPs]
        - IpProtocol: tcp
          FromPort: 9070
          ToPort: 9070
          CidrIp: !Select [0, !Ref AllowedIPs]
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Select [0, !Ref AllowedIPs]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-EC2-SG"
  RestateSSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  RestateInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref RestateSSMRole]

  RestateInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMI
      SubnetId: !Ref SubnetId
      SecurityGroupIds: [!Ref RestateSecurityGroup]
      IamInstanceProfile: !Ref RestateInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 20
            VolumeType: gp3
            DeleteOnTermination: true
        - DeviceName: /dev/sdf
          Ebs:
            VolumeSize: !Ref DataVolumeSize
            VolumeType: gp3
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -eux

          # Directory to install binaries (global)
          BIN=/usr/local/bin

          # Platform for this EC2
          RESTATE_PLATFORM=x86_64-unknown-linux-musl

          # Install dependencies
          yum install -y xfsprogs unzip curl || true

          # Download Restate server and CLI
          curl -L --remote-name-all \
              https://restate.gateway.scarf.sh/latest/restate-server-$RESTATE_PLATFORM.tar.xz \
              https://restate.gateway.scarf.sh/latest/restate-cli-$RESTATE_PLATFORM.tar.xz

          # Extract binaries
          tar -xvf restate-server-$RESTATE_PLATFORM.tar.xz --strip-components=1 restate-server-$RESTATE_PLATFORM/restate-server
          tar -xvf restate-cli-$RESTATE_PLATFORM.tar.xz --strip-components=1 restate-cli-$RESTATE_PLATFORM/restate

          # Make them executable
          chmod +x restate-server restate

          # Move binaries to /usr/local/bin
          sudo mv restate-server $BIN
          sudo mv restate $BIN

          # Create system user for restate
          sudo useradd --system --create-home --home-dir /var/lib/restate --shell /sbin/nologin restate || true
          sudo mkdir -p /var/lib/restate
          sudo chown -R restate:restate /var/lib/restate

          # Create minimal restate.toml
          sudo tee /etc/restate.toml <<EOF
          cluster.name = "restate-single"
          node.name    = "restate-1"
          auto-provision = true

          [admin]
          bind-address = "0.0.0.0:9070"

          [ingress]
          bind-address = "0.0.0.0:8080"

          [metadata-server]
          addresses = ["http://127.0.0.1:5122/"]
          replication-factor = 1

          [log-server]
          addresses = ["http://127.0.0.1:5121/"]
          replication-factor = 1
          EOF

          # Create systemd service
          sudo tee /etc/systemd/system/restate-server.service <<EOF
          [Unit]
          Description=Restate Server
          After=network-online.target
          Wants=network-online.target

          [Service]
          User=restate
          Group=restate
          WorkingDirectory=/var/lib/restate
          ExecStart=$BIN/restate-server --config-file /etc/restate.toml
          Restart=on-failure
          RestartSec=3s
          LimitNOFILE=1048576

          [Install]
          WantedBy=multi-user.target
          EOF

          # Enable and start the service
          sudo systemctl daemon-reload
          sudo systemctl enable --now restate-server
          sudo systemctl status restate-server || true

          # Verify binaries
          $BIN/restate-server --version
          $BIN/restate --version

          echo "Restate server setup complete. Check logs at /var/log/restate-server.log"
          echo "You can access the admin UI at http://<instance-ip>:9070"
Outputs:
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref RestateInstance
  PublicIP:
    Description: Public IP of instance
    Value: !GetAtt RestateInstance.PublicIp
  AdminURL:
    Description: Admin UI URL
    Value: !Sub "http://${RestateInstance.PublicIp}:9070"